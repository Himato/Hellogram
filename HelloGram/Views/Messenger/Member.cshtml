@using HelloGram.Core.ViewModels
@model HelloGram.Core.ViewModels.MemberViewModel
<!-- Member -->
<div class="card mb-6" data-username="@Model.Username">
    <div class="card-body">
        <div class="media align-items-center">
            <div class="avatar@(Model.IsOnline ? " avatar-online" : "") mr-5">
                <img src="/Content/Images/Users/@Model.Image" alt="@Model.Username">
            </div>

            <div class="media-body overflow-hidden">
                @if (Model.Type == MemberViewModel.Tabs.Chats)
                {
                    <div class="d-flex align-items-center mb-1">
                        <h6 class="mb-0">@Model.Name</h6>
                        <p class="small text-muted text-nowrap ml-auto js-last-message-time">@Model.LastMessage.GetFormattedSentDate()</p>
                    </div>
                    <div class="text-truncate js-last-message">@Model.LastMessage.Content</div>
                }
                else
                {
                    <h6 class="mb-0">@Model.Name</h6>
                    if (Model.LastLogin != null)
                    {
                        <small class="text-muted js-last-login">@Model.LastLogin</small>
                    }
                }
            </div>
        </div>
    </div>
    @if (Model.Type == MemberViewModel.Tabs.Chats && Model.NumberOfUnReadMessages > 0)
    {
        <div class="badge badge-circle badge-primary badge-border-light badge-top-right">
            <span>@Model.NumberOfUnReadMessages</span>
        </div>
    }
    <!-- Link -->
    <a href="@Url.Action("Chat", "Messenger", new { username = Model.Username })" class="stretched-link"></a>
</div>