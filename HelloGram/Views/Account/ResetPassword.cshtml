@model HelloGram.Core.ViewModels.ResetPasswordViewModel
@{
    ViewBag.Title = "Reset password";
    Layout = "_Shared.cshtml";
}

<!-- Page content -->
<div class="container mt--8 pb-5">
    <div class="row justify-content-center">
        <div class="col-lg-6 col-md-7">
            <div class="card bg-secondary shadow border-0">
                <div class="card-body px-lg-5 py-lg-5">
                    <div class="text-center text-muted mb-4">
                        <small>Reset your password</small>
                    </div>
                    @using (Html.BeginForm("ResetPassword", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { role = "form" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(model => model.Code)
                        <div class="form-group mb-3">
                            <div class="input-group input-group-alternative">
                                <div class="input-group-prepend">
                                    <span class="input-group-text"><i class="ni ni-email-83"></i></span>
                                </div>
                                @Html.TextBoxFor(m => m.Username, new { @class = "form-control", type = "text", placeholder = "Username" })
                            </div>
                            @Html.ValidationMessageFor(m => m.Username, "", new { @class = "validation-error text-danger" })
                        </div>
                        <div class="form-group">
                            <div class="input-group input-group-alternative">
                                <div class="input-group-prepend">
                                    <span class="input-group-text"><i class="ni ni-lock-circle-open"></i></span>
                                </div>
                                @Html.PasswordFor(m => m.Password, new { @class = "form-control", type = "password", placeholder = "Password" })
                            </div>
                            @Html.ValidationMessageFor(m => m.Password, "", new { @class = "validation-error text-danger" })
                        </div>
                        <div class="form-group">
                            <div class="input-group input-group-alternative">
                                <div class="input-group-prepend">
                                    <span class="input-group-text"><i class="ni ni-lock-circle-open"></i></span>
                                </div>
                                @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control", type = "password", placeholder = "Confirm Password" })
                            </div>
                            @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "validation-error text-danger" })
                        </div>
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="text-center">
                            <button type="submit" class="btn btn-primary my-4">Reset</button>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
